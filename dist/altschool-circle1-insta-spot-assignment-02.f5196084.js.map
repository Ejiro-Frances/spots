{"mappings":"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","sources":["<anon>","js/script.js","js/modules/displayCards.js","js/modules/cards.js","node_modules/@parcel/runtime-js/lib/runtime-d56140cfe7e1e6de.js","node_modules/@parcel/runtime-js/lib/runtime-581d3fb6ac7682a5.js","node_modules/@parcel/runtime-js/lib/runtime-d556fbdd097f0e5b.js","node_modules/@parcel/runtime-js/lib/runtime-99ac7db32f24861a.js","node_modules/@parcel/runtime-js/lib/runtime-a3de1db0aeca6734.js","node_modules/@parcel/runtime-js/lib/runtime-30ac497547066f44.js","js/modules/focusCard.js","js/modules/profileEditor.js","js/modules/previewableCards.js","js/modules/newPost.js"],"sourcesContent":["// Cards Data\n// export const cardsData = [\n//   {\n//     imgSrc: \"../../assets/images/card1.svg\",\n//     imgAlt: \"Snow-covered mountains in Val Thorens\",\n//     title: \"Val Thorens\",\n//   },\n//   {\n//     imgSrc: \"../../assets/images/Card2.png\",\n//     imgAlt: \"Restaurant terrace with a view\",\n//     title: \"Restaurant terrace\",\n//   },\n//   {\n//     imgSrc: \"../../assets/images/Card3.png\",\n//     imgAlt: \"Outdoor cafe with people\",\n//     title: \"An outdoor cafe\",\n//   },\n//   {\n//     imgSrc: \"../../assets/images/Card4.png\",\n//     imgAlt: \"A long bridge over a forest\",\n//     title: \"A very long bridge, over the forest...\",\n//   },\n//   {\n//     imgSrc: \"../../assets/images/Card5.png\",\n//     imgAlt: \"A man walking in a tunnel with morning light shining through\",\n//     title: \"Tunnel with morning light\",\n//   },\n//   {\n//     imgSrc: \"../../assets/images/Card6.png\",\n//     imgAlt: \"Mountain house\",\n//     title: \"Mountain house\",\n//   },\n// ];\n// import Card1 from \"../../assets/images/card1.svg\";\n// console.log(typeof Card1);\n// console.log(\"Card1 import:\", Card1);\n// import Card2 from \"../../assets/images/Card2.png\";\n// import Card3 from \"../../assets/images/Card3.png\";\n// import Card4 from \"../../assets/images/Card4.png\";\n// import Card5 from \"../../assets/images/Card5.png\";\n// import Card6 from \"../../assets/images/Card6.png\";\nvar $8bf73722392db36b$exports = {};\n$8bf73722392db36b$exports = import.meta.resolve(\"hNJUz\");\n\n\nconst $afe477fc70728137$var$Card1 = new URL($8bf73722392db36b$exports).href;\nvar $34d711f61127dddc$exports = {};\n$34d711f61127dddc$exports = import.meta.resolve(\"dKJrz\");\n\n\nconst $afe477fc70728137$var$Card2 = new URL($34d711f61127dddc$exports).href;\nvar $9338d5298678106a$exports = {};\n$9338d5298678106a$exports = import.meta.resolve(\"3KJz1\");\n\n\nconst $afe477fc70728137$var$Card3 = new URL($9338d5298678106a$exports).href;\nvar $0873a534e8e0782d$exports = {};\n$0873a534e8e0782d$exports = import.meta.resolve(\"1esIE\");\n\n\nconst $afe477fc70728137$var$Card4 = new URL($0873a534e8e0782d$exports).href;\nvar $7e33e164117ffdb7$exports = {};\n$7e33e164117ffdb7$exports = import.meta.resolve(\"3QMWV\");\n\n\nconst $afe477fc70728137$var$Card5 = new URL($7e33e164117ffdb7$exports).href;\nvar $6351ad38529be8d9$exports = {};\n$6351ad38529be8d9$exports = import.meta.resolve(\"7ViZC\");\n\n\nconst $afe477fc70728137$var$Card6 = new URL($6351ad38529be8d9$exports).href;\nconst $afe477fc70728137$export$b71ca3cbd6194e6d = [\n    {\n        imgSrc: $afe477fc70728137$var$Card1,\n        imgAlt: \"Snow-covered mountains in Val Thorens\",\n        title: \"Val Thorens\"\n    },\n    {\n        imgSrc: $afe477fc70728137$var$Card2,\n        imgAlt: \"Restaurant terrace with a view\",\n        title: \"Restaurant terrace\"\n    },\n    {\n        imgSrc: $afe477fc70728137$var$Card3,\n        imgAlt: \"Outdoor cafe with people\",\n        title: \"An outdoor cafe\"\n    },\n    {\n        imgSrc: $afe477fc70728137$var$Card4,\n        imgAlt: \"A long bridge over a forest\",\n        title: \"A very long bridge, over the forest...\"\n    },\n    {\n        imgSrc: $afe477fc70728137$var$Card5,\n        imgAlt: \"A man walking in a tunnel with morning light shining through\",\n        title: \"Tunnel with morning light\"\n    },\n    {\n        imgSrc: $afe477fc70728137$var$Card6,\n        imgAlt: \"Mountain house\",\n        title: \"Mountain house\"\n    }\n];\n\n\nconst $9ef1445a26defebe$var$style = document.createElement(\"style\");\n$9ef1445a26defebe$var$style.textContent = `\n    .like-icon:focus {\n      outline: none;\n    }\n\n    .like-icon.liked path {\n      fill: red;\n      stroke: red;\n    }\n      \n    .card-img-container {\n    overflow: hidden;\n    }\n\n  .card-img {\n    transition: transform 0.3s ease-in-out;\n  }\n\n  .card.focused .card-img {\n    transform: scale(1.1);\n  }\n  `;\ndocument.head.appendChild($9ef1445a26defebe$var$style);\nfunction $9ef1445a26defebe$export$b0abd1dc649685e2(containerSelector) {\n    const container = document.querySelector(containerSelector);\n    if (!container) return;\n    container.innerHTML = \"\";\n    (0, $afe477fc70728137$export$b71ca3cbd6194e6d).forEach((card)=>{\n        const cardHTML = `\n      <article class=\"card\">\n        <div class=\"card-img-container\">\n          <img\n            src=\"${card.imgSrc}\"\n            alt=\"${card.imgAlt}\"\n            class=\"card-img\"\n            loading=\"lazy\"\n          />\n        </div>\n\n        <div class=\"card-description\">\n          <p class=\"card-title\">${card.title}</p>\n          <div class=\"like\">\n            <svg\n              class=\"like-icon\"\n              role=\"button\"\n              tabindex=\"0\"\n              width=\"23\"\n              height=\"20\"\n              viewBox=\"0 0 23 20\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              aria-label=\"Like button\"\n            >\n              <path\n                d=\"M15.9512 1.05664C17.3161 0.856584 18.8067 1.15981 20.1602 2.32812L20.4287 2.57324C22.6597 4.72264 22.3285 8.02556 20.5967 9.89355L20.4248 10.0693L11.5 18.6025L2.57422 10.0693H2.5752C0.754421 8.29659 0.296669 5.00618 2.36328 2.78516L2.57129 2.57324C3.99417 1.20243 5.593 0.843258 7.04883 1.05664C8.5402 1.27524 9.89546 2.09997 10.7266 3.11523L11.5 4.06055L12.2734 3.11523C13.1045 2.09997 14.4598 1.27524 15.9512 1.05664Z\"\n                stroke=\"#212121\"\n                stroke-width=\"2\"\n              />\n            </svg>\n          </div>\n        </div>\n      </article>\n    `;\n        container.insertAdjacentHTML(\"beforeend\", cardHTML);\n        console.log(card.imgSrc);\n    });\n    // Event listener for toggling 'liked' class on like icons\n    container.addEventListener(\"click\", (e)=>{\n        const likeIcon = e.target.closest(\".like-icon\");\n        if (likeIcon) likeIcon.classList.toggle(\"liked\");\n    });\n}\n\n\nfunction $75ce58cc47fca148$export$45a3597b22dddc9a(containerSelector) {\n    const container = document.querySelector(containerSelector);\n    if (!container) return;\n    const firstImgCard = container.querySelector(\".card\");\n    if (firstImgCard) firstImgCard.classList.add(\"focused\");\n    container.addEventListener(\"mouseover\", (e)=>{\n        const hoveredCard = e.target.closest(\".card\");\n        if (hoveredCard) {\n            // Remove focus from all cards\n            container.querySelectorAll(\".card\").forEach((card)=>{\n                card.classList.remove(\"focused\");\n            });\n            // Add focus to hovered card\n            hoveredCard.classList.add(\"focused\");\n        }\n    });\n    container.addEventListener(\"mouseleave\", ()=>{\n        container.querySelectorAll(\".card\").forEach((card)=>{\n            card.classList.remove(\"focused\");\n        });\n    });\n}\n\n\nconst $5f11f066d705c207$var$modalEl = document.querySelector(\".modal\");\nconst $5f11f066d705c207$var$editForm = document.querySelector(\"#editForm\");\nconst $5f11f066d705c207$var$originalName = document.querySelector(\"#profileName\");\nconst $5f11f066d705c207$var$originalDescription = document.querySelector(\"#profileTitle\");\nconst $5f11f066d705c207$var$profileImage = document.getElementById(\"profileImage\");\nconst $5f11f066d705c207$var$newName = document.getElementById(\"editName\");\nconst $5f11f066d705c207$var$newDescription = document.getElementById(\"editDesc\");\nconst $5f11f066d705c207$var$fileInput = document.getElementById(\"editImage\");\nconst $5f11f066d705c207$var$nameError = document.querySelector(\"#name-error\");\nconst $5f11f066d705c207$var$descriptionError = document.querySelector(\"#description-error\");\nfunction $5f11f066d705c207$export$fe66f3af5657e164() {\n    $5f11f066d705c207$var$editForm.addEventListener(\"submit\", (e)=>{\n        e.preventDefault();\n        let hasError = false;\n        // validate name\n        if ($5f11f066d705c207$var$newName.value.trim().length < 2) {\n            $5f11f066d705c207$var$nameError.classList.remove(\"hidden\");\n            $5f11f066d705c207$var$nameError.textContent = \"Minimum of 2 characters\";\n            hasError = true;\n        } else $5f11f066d705c207$var$nameError.classList.add(\"hidden\");\n        // validate description\n        if ($5f11f066d705c207$var$newDescription.value.trim().length < 2) {\n            $5f11f066d705c207$var$descriptionError.classList.remove(\"hidden\");\n            $5f11f066d705c207$var$descriptionError.textContent = \"Minimum of 2 characters\";\n            hasError = true;\n        } else $5f11f066d705c207$var$descriptionError.classList.add(\"hidden\");\n        if (hasError) return;\n        // Populate modal inputs with original values\n        $5f11f066d705c207$var$originalName.textContent = $5f11f066d705c207$var$newName.value.trim();\n        $5f11f066d705c207$var$originalDescription.textContent = $5f11f066d705c207$var$newDescription.value.trim();\n        // update image only if a file is selected\n        if ($5f11f066d705c207$var$fileInput.files && $5f11f066d705c207$var$fileInput.files[0]) {\n            const reader = new FileReader();\n            reader.onload = function(e) {\n                $5f11f066d705c207$var$profileImage.src = e.target.result;\n            };\n            reader.readAsDataURL($5f11f066d705c207$var$fileInput.files[0]);\n        }\n        $5f11f066d705c207$var$modalEl.close();\n        $5f11f066d705c207$var$editForm.reset();\n    });\n} // Store original values\n // let originalName = \"\";\n // let originalTitle = \"\";\n // Function to open the modal\n // function openEditModal() {\n // Populate modal inputs with original values\n //   document.getElementById(\"editName\").value = originalName;\n //   document.getElementById(\"editDesc\").value = originalTitle;\n //   document.getElementById(\"editModal\").style.display = \"block\";\n // }\n // Function to hide the modal\n // function closeEditModal() {\n //   document.getElementById(\"editModal\").style.display = \"none\";\n // }\n // Function to save changes to profile\n // function saveProfile() {\n //   const newName = document.getElementById(\"editName\").value.trim();\n //   const newTitle = document.getElementById(\"editDesc\").value.trim();\n //   if (!newName || !newTitle) {\n //     document.getElementById(\"profileName\").textContent = originalName;\n //     document.getElementById(\"profileTitle\").textContent = originalTitle;\n //     closeEditModal();\n //     return;\n //   }\n //   document.getElementById(\"profileName\").textContent = newName;\n //   document.getElementById(\"profileTitle\").textContent = newTitle;\n //   const fileInput = document.getElementById(\"editImage\");\n //   if (fileInput.files && fileInput.files[0]) {\n //     const reader = new FileReader();\n //     reader.onload = function (e) {\n //       document.getElementById(\"profileImage\").src = e.target.result;\n //     };\n //     reader.readAsDataURL(fileInput.files[0]);\n //   }\n //   closeEditModal();\n // }\n // // Close modal with ESC key\n // document.addEventListener(\"keydown\", (event) => {\n //   if (event.key === \"Escape\") {\n //     closeEditModal();\n //   }\n // });\n // // Export the module functions\n // export { openEditModal, closeEditModal, saveProfile };\n\n\n\nfunction $ecfd02eb2d660572$export$9d6c1570bebfa4e6(containerSelector) {\n    const container = document.querySelector(containerSelector);\n    const previewableModal = document.querySelector(\".previewable-modal\");\n    let modalOpen = false;\n    let clickedImage = null;\n    // Delegate click event to child images\n    container.addEventListener(\"click\", (event)=>{\n        const clickedImg = event.target.closest(\"img\");\n        if (!clickedImg) return; // Click wasn't on an image\n        // Find the matching card data based on the clicked image src\n        const clickedSrc = clickedImg.getAttribute(\"src\");\n        // Match using file name only\n        const clickedFileName = clickedSrc.split(\"/\").pop();\n        const card = (0, $afe477fc70728137$export$b71ca3cbd6194e6d).find((c)=>c.imgSrc.split(\"/\").pop() === clickedFileName);\n        if (!card) {\n            console.warn(\"No card found for image:\", clickedSrc);\n            return;\n        }\n        // Save the clicked image\n        clickedImage = clickedImg;\n        // Clear and show modal\n        previewableModal.innerHTML = \"\";\n        previewableModal.showModal();\n        modalOpen = true;\n        // Add body click listener (delayed to skip the current click)\n        setTimeout(()=>{\n            previewableModal.classList.add(\"show\");\n            document.body.addEventListener(\"click\", bodyClickHandler);\n        }, 0);\n        // Create and insert the clicked card preview\n        const displayPreviewableCard = document.createElement(\"div\");\n        displayPreviewableCard.innerHTML = `\n         <div class=\"previewable-images\">\n          <div class=\"card-img-container\">\n            <img\n              src=\"${card.imgSrc}\"\n              alt=\"${card.imgAlt}\"\n              class=\"card-img preview-img\"\n            />\n          </div>\n         <p class=\"previewable-title\">${card.title}</p>\n      </div>\n         `;\n        previewableModal.appendChild(displayPreviewableCard);\n        // Close icon\n        const deleteIcon = document.createElement(\"img\");\n        deleteIcon.src = \"./assets/icons/x-close-delete-svgrepo-com.svg\";\n        deleteIcon.classList.add(\"delete-icon\");\n        deleteIcon.addEventListener(\"click\", ()=>{\n            closeModal();\n        });\n        previewableModal.appendChild(deleteIcon);\n    });\n    // Close when clicking outside modal content\n    function bodyClickHandler(event) {\n        const isInsideModal = event.target.closest(\".previewable-images\");\n        const isOriginalImage = clickedImage && event.target === clickedImage;\n        if (!isInsideModal && !isOriginalImage) closeModal();\n    }\n    function closeModal() {\n        if (!modalOpen) return;\n        modalOpen = false;\n        previewableModal.close();\n        //  previewableModal.classList.remove(\"show\"); // reset animation state\n        document.body.removeEventListener(\"click\", bodyClickHandler);\n        clickedImage = null;\n    }\n}\n\n\n\nconst $981be92df5bd93a8$var$modal = document.getElementById(\"postModal\");\nconst $981be92df5bd93a8$var$postForm = document.getElementById(\"newPostForm\");\nconst $981be92df5bd93a8$var$postImage = document.getElementById(\"postImage\");\nconst $981be92df5bd93a8$var$titleInput = document.getElementById(\"post-title\");\nconst $981be92df5bd93a8$var$titleError = document.getElementById(\"post-title-error\");\nconst $981be92df5bd93a8$var$imgError = document.getElementById(\"post-img-error\");\nconst $981be92df5bd93a8$var$customUpload = document.getElementById(\"customUpload\");\nconst $981be92df5bd93a8$var$uploadPreview = document.getElementById(\"uploadPreview\");\nconst $981be92df5bd93a8$var$uploadText = document.getElementById(\"uploadText\");\n// Handle upload box click\n$981be92df5bd93a8$var$customUpload.addEventListener(\"click\", ()=>{\n    $981be92df5bd93a8$var$postImage.click();\n});\n// Handle image preview on file select\n$981be92df5bd93a8$var$postImage.addEventListener(\"change\", ()=>{\n    const file = $981be92df5bd93a8$var$postImage.files[0];\n    if (file) {\n        const reader = new FileReader();\n        reader.onload = function(e) {\n            $981be92df5bd93a8$var$uploadPreview.src = e.target.result;\n            $981be92df5bd93a8$var$uploadPreview.classList.remove(\"hidden\");\n            $981be92df5bd93a8$var$uploadText.classList.add(\"hidden\");\n        };\n        reader.readAsDataURL(file);\n    }\n});\nfunction $981be92df5bd93a8$export$3f035eba67ca96ee() {\n    $981be92df5bd93a8$var$postForm.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        const title = $981be92df5bd93a8$var$titleInput.value.trim();\n        if (!title) {\n            $981be92df5bd93a8$var$titleError.classList.remove(\"hidden\");\n            return;\n        }\n        if (!$981be92df5bd93a8$var$postImage.files || !$981be92df5bd93a8$var$postImage.files[0]) {\n            $981be92df5bd93a8$var$imgError.classList.remove(\"hidden\");\n            return;\n        }\n        const reader = new FileReader();\n        reader.onload = function(e) {\n            const imageDataUrl = e.target.result;\n            // Add the new post to cardsData\n            (0, $afe477fc70728137$export$b71ca3cbd6194e6d).unshift({\n                imgSrc: imageDataUrl,\n                imgAlt: title,\n                title: title\n            });\n            // Create new card element in DOM as before\n            const newCard = document.createElement(\"div\");\n            newCard.className = \"card\";\n            newCard.innerHTML = `\n        <div class=\"card-img-container\">\n          <img class=\"card-img\" src=\"${imageDataUrl}\" alt=\"${title}\" />\n        </div>\n        <div class=\"card-description\">\n          <p class=\"card-title\">${title}</p>\n           <div class=\"like\">\n            <svg\n              class=\"like-icon\"\n              role=\"button\"\n              tabindex=\"0\"\n              width=\"23\"\n              height=\"20\"\n              viewBox=\"0 0 23 20\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              aria-label=\"Like button\"\n            >\n              <path\n                d=\"M15.9512 1.05664C17.3161 0.856584 18.8067 1.15981 20.1602 2.32812L20.4287 2.57324C22.6597 4.72264 22.3285 8.02556 20.5967 9.89355L20.4248 10.0693L11.5 18.6025L2.57422 10.0693H2.5752C0.754421 8.29659 0.296669 5.00618 2.36328 2.78516L2.57129 2.57324C3.99417 1.20243 5.593 0.843258 7.04883 1.05664C8.5402 1.27524 9.89546 2.09997 10.7266 3.11523L11.5 4.06055L12.2734 3.11523C13.1045 2.09997 14.4598 1.27524 15.9512 1.05664Z\"\n                stroke=\"#212121\"\n                stroke-width=\"2\"\n              />\n            </svg>\n          </div>\n        </div>\n      `;\n            document.querySelector(\".container\").prepend(newCard);\n            const newImg = newCard.querySelector(\".card-img\");\n            // No need to call setupPreview() here because\n            // the click event listener is delegated by previewableCards()\n            $981be92df5bd93a8$var$modal.close();\n            $981be92df5bd93a8$var$postForm.reset();\n            // Reset preview box\n            $981be92df5bd93a8$var$uploadPreview.classList.add(\"hidden\");\n            $981be92df5bd93a8$var$uploadPreview.src = \"\";\n            $981be92df5bd93a8$var$uploadText.classList.remove(\"hidden\");\n        };\n        reader.readAsDataURL($981be92df5bd93a8$var$postImage.files[0]);\n    });\n}\n\n\nconst $63eb283d27decb4d$var$modalEl = document.querySelector(\".modal\");\nconst $63eb283d27decb4d$var$editBtnEl = document.getElementById(\"editBtn\");\nconst $63eb283d27decb4d$var$cancelBtn = document.getElementById(\"cancelBtn\");\nconst $63eb283d27decb4d$var$modalPost = document.getElementById(\"postModal\");\nconst $63eb283d27decb4d$var$newPostBtn = document.querySelector(\"#post-btn\");\nconst $63eb283d27decb4d$var$closePostModal = document.getElementById(\"closeModal\");\n(0, $9ef1445a26defebe$export$b0abd1dc649685e2)(\".container\");\n(0, $5f11f066d705c207$export$fe66f3af5657e164)();\n(0, $ecfd02eb2d660572$export$9d6c1570bebfa4e6)(\".container\");\n(0, $981be92df5bd93a8$export$3f035eba67ca96ee)();\n(0, $75ce58cc47fca148$export$45a3597b22dddc9a)(\".container\");\n// Attach event listeners (ensure elements exist in HTML)\n$63eb283d27decb4d$var$editBtnEl.addEventListener(\"click\", ()=>{\n    $63eb283d27decb4d$var$modalEl.showModal();\n});\n$63eb283d27decb4d$var$cancelBtn.addEventListener(\"click\", ()=>$63eb283d27decb4d$var$modalEl.close());\n$63eb283d27decb4d$var$newPostBtn.addEventListener(\"click\", ()=>$63eb283d27decb4d$var$modalPost.showModal());\n$63eb283d27decb4d$var$closePostModal.addEventListener(\"click\", ()=>$63eb283d27decb4d$var$modalPost.close());\n// Close modal by clicking outside\nwindow.addEventListener(\"click\", (e)=>{\n    if (e.target === $63eb283d27decb4d$var$modalPost || e.target === $63eb283d27decb4d$var$modalEl) {\n        $63eb283d27decb4d$var$modalPost.close();\n        $63eb283d27decb4d$var$modalEl.close();\n    }\n});\n\n\n//# sourceMappingURL=altschool-circle1-insta-spot-assignment-02.f5196084.js.map\n","import { displayCards } from \"./modules/displayCards.js\";\r\nimport { setAutoFocus } from \"./modules/focusCard.js\";\r\nimport { updateEditForm } from \"./modules/profileEditor.js\";\r\nimport { previewableCards } from \"./modules/previewableCards.js\";\r\nimport { createNewPost } from \"./modules/newPost.js\";\r\n\r\nconst modalEl = document.querySelector(\".modal\");\r\nconst editBtnEl = document.getElementById(\"editBtn\");\r\nconst cancelBtn = document.getElementById(\"cancelBtn\");\r\n\r\nconst modalPost = document.getElementById(\"postModal\");\r\nconst newPostBtn = document.querySelector(\"#post-btn\");\r\nconst closePostModal = document.getElementById(\"closeModal\");\r\n\r\ndisplayCards(\".container\");\r\nupdateEditForm();\r\npreviewableCards(\".container\");\r\ncreateNewPost();\r\nsetAutoFocus(\".container\");\r\n\r\n// Attach event listeners (ensure elements exist in HTML)\r\neditBtnEl.addEventListener(\"click\", () => {\r\n  modalEl.showModal();\r\n});\r\ncancelBtn.addEventListener(\"click\", () => modalEl.close());\r\nnewPostBtn.addEventListener(\"click\", () => modalPost.showModal());\r\nclosePostModal.addEventListener(\"click\", () => modalPost.close());\r\n\r\n// Close modal by clicking outside\r\nwindow.addEventListener(\"click\", (e) => {\r\n  if (e.target === modalPost || e.target === modalEl) {\r\n    modalPost.close();\r\n    modalEl.close();\r\n  }\r\n});\r\n","import { cardsData } from \"./cards.js\";\r\n\r\nconst style = document.createElement(\"style\");\r\nstyle.textContent = `\r\n    .like-icon:focus {\r\n      outline: none;\r\n    }\r\n\r\n    .like-icon.liked path {\r\n      fill: red;\r\n      stroke: red;\r\n    }\r\n      \r\n    .card-img-container {\r\n    overflow: hidden;\r\n    }\r\n\r\n  .card-img {\r\n    transition: transform 0.3s ease-in-out;\r\n  }\r\n\r\n  .card.focused .card-img {\r\n    transform: scale(1.1);\r\n  }\r\n  `;\r\ndocument.head.appendChild(style);\r\n\r\n// function to create and display cards inside a container\r\nexport function displayCards(containerSelector) {\r\n  const container = document.querySelector(containerSelector);\r\n  if (!container) return;\r\n\r\n  container.innerHTML = \"\";\r\n\r\n  cardsData.forEach((card) => {\r\n    const cardHTML = `\r\n      <article class=\"card\">\r\n        <div class=\"card-img-container\">\r\n          <img\r\n            src=\"${card.imgSrc}\"\r\n            alt=\"${card.imgAlt}\"\r\n            class=\"card-img\"\r\n            loading=\"lazy\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"card-description\">\r\n          <p class=\"card-title\">${card.title}</p>\r\n          <div class=\"like\">\r\n            <svg\r\n              class=\"like-icon\"\r\n              role=\"button\"\r\n              tabindex=\"0\"\r\n              width=\"23\"\r\n              height=\"20\"\r\n              viewBox=\"0 0 23 20\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              aria-label=\"Like button\"\r\n            >\r\n              <path\r\n                d=\"M15.9512 1.05664C17.3161 0.856584 18.8067 1.15981 20.1602 2.32812L20.4287 2.57324C22.6597 4.72264 22.3285 8.02556 20.5967 9.89355L20.4248 10.0693L11.5 18.6025L2.57422 10.0693H2.5752C0.754421 8.29659 0.296669 5.00618 2.36328 2.78516L2.57129 2.57324C3.99417 1.20243 5.593 0.843258 7.04883 1.05664C8.5402 1.27524 9.89546 2.09997 10.7266 3.11523L11.5 4.06055L12.2734 3.11523C13.1045 2.09997 14.4598 1.27524 15.9512 1.05664Z\"\r\n                stroke=\"#212121\"\r\n                stroke-width=\"2\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    `;\r\n    container.insertAdjacentHTML(\"beforeend\", cardHTML);\r\n    console.log(card.imgSrc);\r\n  });\r\n\r\n  // Event listener for toggling 'liked' class on like icons\r\n  container.addEventListener(\"click\", (e) => {\r\n    const likeIcon = e.target.closest(\".like-icon\");\r\n    if (likeIcon) {\r\n      likeIcon.classList.toggle(\"liked\");\r\n    }\r\n  });\r\n}\r\n","// Cards Data\r\n\r\n// export const cardsData = [\r\n//   {\r\n//     imgSrc: \"../../assets/images/card1.svg\",\r\n//     imgAlt: \"Snow-covered mountains in Val Thorens\",\r\n//     title: \"Val Thorens\",\r\n//   },\r\n//   {\r\n//     imgSrc: \"../../assets/images/Card2.png\",\r\n//     imgAlt: \"Restaurant terrace with a view\",\r\n//     title: \"Restaurant terrace\",\r\n//   },\r\n//   {\r\n//     imgSrc: \"../../assets/images/Card3.png\",\r\n//     imgAlt: \"Outdoor cafe with people\",\r\n//     title: \"An outdoor cafe\",\r\n//   },\r\n//   {\r\n//     imgSrc: \"../../assets/images/Card4.png\",\r\n//     imgAlt: \"A long bridge over a forest\",\r\n//     title: \"A very long bridge, over the forest...\",\r\n//   },\r\n//   {\r\n//     imgSrc: \"../../assets/images/Card5.png\",\r\n//     imgAlt: \"A man walking in a tunnel with morning light shining through\",\r\n//     title: \"Tunnel with morning light\",\r\n//   },\r\n//   {\r\n//     imgSrc: \"../../assets/images/Card6.png\",\r\n//     imgAlt: \"Mountain house\",\r\n//     title: \"Mountain house\",\r\n//   },\r\n// ];\r\n\r\n// import Card1 from \"../../assets/images/card1.svg\";\r\n// console.log(typeof Card1);\r\n// console.log(\"Card1 import:\", Card1);\r\n// import Card2 from \"../../assets/images/Card2.png\";\r\n// import Card3 from \"../../assets/images/Card3.png\";\r\n// import Card4 from \"../../assets/images/Card4.png\";\r\n// import Card5 from \"../../assets/images/Card5.png\";\r\n// import Card6 from \"../../assets/images/Card6.png\";\r\n\r\nconst Card1 = new URL(\"../../assets/images/Card1.jpg\", import.meta.url).href;\r\nconst Card2 = new URL(\"../../assets/images/Card2.png\", import.meta.url).href;\r\nconst Card3 = new URL(\"../../assets/images/Card3.png\", import.meta.url).href;\r\nconst Card4 = new URL(\"../../assets/images/Card4.png\", import.meta.url).href;\r\nconst Card5 = new URL(\"../../assets/images/Card5.png\", import.meta.url).href;\r\nconst Card6 = new URL(\"../../assets/images/Card6.png\", import.meta.url).href;\r\n\r\nexport const cardsData = [\r\n  {\r\n    imgSrc: Card1,\r\n    imgAlt: \"Snow-covered mountains in Val Thorens\",\r\n    title: \"Val Thorens\",\r\n  },\r\n  {\r\n    imgSrc: Card2,\r\n    imgAlt: \"Restaurant terrace with a view\",\r\n    title: \"Restaurant terrace\",\r\n  },\r\n  {\r\n    imgSrc: Card3,\r\n    imgAlt: \"Outdoor cafe with people\",\r\n    title: \"An outdoor cafe\",\r\n  },\r\n  {\r\n    imgSrc: Card4,\r\n    imgAlt: \"A long bridge over a forest\",\r\n    title: \"A very long bridge, over the forest...\",\r\n  },\r\n  {\r\n    imgSrc: Card5,\r\n    imgAlt: \"A man walking in a tunnel with morning light shining through\",\r\n    title: \"Tunnel with morning light\",\r\n  },\r\n  {\r\n    imgSrc: Card6,\r\n    imgAlt: \"Mountain house\",\r\n    title: \"Mountain house\",\r\n  },\r\n];\r\n","module.exports = __parcel__import__.meta.resolve(\"hNJUz\");","module.exports = __parcel__import__.meta.resolve(\"dKJrz\");","module.exports = __parcel__import__.meta.resolve(\"3KJz1\");","module.exports = __parcel__import__.meta.resolve(\"1esIE\");","module.exports = __parcel__import__.meta.resolve(\"3QMWV\");","module.exports = __parcel__import__.meta.resolve(\"7ViZC\");","export function setAutoFocus(containerSelector) {\r\n  const container = document.querySelector(containerSelector);\r\n\r\n  if (!container) return;\r\n\r\n  const firstImgCard = container.querySelector(\".card\");\r\n  if (firstImgCard) {\r\n    firstImgCard.classList.add(\"focused\");\r\n  }\r\n\r\n  container.addEventListener(\"mouseover\", (e) => {\r\n    const hoveredCard = e.target.closest(\".card\");\r\n    if (hoveredCard) {\r\n      // Remove focus from all cards\r\n      container.querySelectorAll(\".card\").forEach((card) => {\r\n        card.classList.remove(\"focused\");\r\n      });\r\n      // Add focus to hovered card\r\n      hoveredCard.classList.add(\"focused\");\r\n    }\r\n  });\r\n\r\n  container.addEventListener(\"mouseleave\", () => {\r\n    container.querySelectorAll(\".card\").forEach((card) => {\r\n      card.classList.remove(\"focused\");\r\n    });\r\n  });\r\n}\r\n","const modalEl = document.querySelector(\".modal\");\r\nconst editForm = document.querySelector(\"#editForm\");\r\nconst originalName = document.querySelector(\"#profileName\");\r\nconst originalDescription = document.querySelector(\"#profileTitle\");\r\nconst profileImage = document.getElementById(\"profileImage\");\r\nconst newName = document.getElementById(\"editName\");\r\nconst newDescription = document.getElementById(\"editDesc\");\r\nconst fileInput = document.getElementById(\"editImage\");\r\nconst nameError = document.querySelector(\"#name-error\");\r\nconst descriptionError = document.querySelector(\"#description-error\");\r\n\r\nexport function updateEditForm() {\r\n  editForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    let hasError = false;\r\n\r\n    // validate name\r\n    if (newName.value.trim().length < 2) {\r\n      nameError.classList.remove(\"hidden\");\r\n      nameError.textContent = \"Minimum of 2 characters\";\r\n      hasError = true;\r\n    } else {\r\n      nameError.classList.add(\"hidden\");\r\n    }\r\n\r\n    // validate description\r\n    if (newDescription.value.trim().length < 2) {\r\n      descriptionError.classList.remove(\"hidden\");\r\n      descriptionError.textContent = \"Minimum of 2 characters\";\r\n      hasError = true;\r\n    } else {\r\n      descriptionError.classList.add(\"hidden\");\r\n    }\r\n\r\n    if (hasError) return;\r\n\r\n    // Populate modal inputs with original values\r\n    originalName.textContent = newName.value.trim();\r\n    originalDescription.textContent = newDescription.value.trim();\r\n\r\n    // update image only if a file is selected\r\n    if (fileInput.files && fileInput.files[0]) {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        profileImage.src = e.target.result;\r\n      };\r\n      reader.readAsDataURL(fileInput.files[0]);\r\n    }\r\n\r\n    modalEl.close();\r\n    editForm.reset();\r\n  });\r\n}\r\n\r\n// Store original values\r\n// let originalName = \"\";\r\n// let originalTitle = \"\";\r\n\r\n// Function to open the modal\r\n// function openEditModal() {\r\n// Populate modal inputs with original values\r\n//   document.getElementById(\"editName\").value = originalName;\r\n//   document.getElementById(\"editDesc\").value = originalTitle;\r\n\r\n//   document.getElementById(\"editModal\").style.display = \"block\";\r\n// }\r\n\r\n// Function to hide the modal\r\n// function closeEditModal() {\r\n//   document.getElementById(\"editModal\").style.display = \"none\";\r\n// }\r\n\r\n// Function to save changes to profile\r\n// function saveProfile() {\r\n//   const newName = document.getElementById(\"editName\").value.trim();\r\n//   const newTitle = document.getElementById(\"editDesc\").value.trim();\r\n\r\n//   if (!newName || !newTitle) {\r\n//     document.getElementById(\"profileName\").textContent = originalName;\r\n//     document.getElementById(\"profileTitle\").textContent = originalTitle;\r\n//     closeEditModal();\r\n\r\n//     return;\r\n//   }\r\n\r\n//   document.getElementById(\"profileName\").textContent = newName;\r\n//   document.getElementById(\"profileTitle\").textContent = newTitle;\r\n\r\n//   const fileInput = document.getElementById(\"editImage\");\r\n\r\n//   if (fileInput.files && fileInput.files[0]) {\r\n//     const reader = new FileReader();\r\n//     reader.onload = function (e) {\r\n//       document.getElementById(\"profileImage\").src = e.target.result;\r\n//     };\r\n//     reader.readAsDataURL(fileInput.files[0]);\r\n//   }\r\n\r\n//   closeEditModal();\r\n// }\r\n\r\n// // Close modal with ESC key\r\n// document.addEventListener(\"keydown\", (event) => {\r\n//   if (event.key === \"Escape\") {\r\n//     closeEditModal();\r\n//   }\r\n// });\r\n\r\n// // Export the module functions\r\n// export { openEditModal, closeEditModal, saveProfile };\r\n","import { cardsData } from \"./cards.js\";\r\n\r\nexport function previewableCards(containerSelector) {\r\n  const container = document.querySelector(containerSelector);\r\n  const previewableModal = document.querySelector(\".previewable-modal\");\r\n\r\n  let modalOpen = false;\r\n  let clickedImage = null;\r\n\r\n  // Delegate click event to child images\r\n  container.addEventListener(\"click\", (event) => {\r\n    const clickedImg = event.target.closest(\"img\");\r\n    if (!clickedImg) return; // Click wasn't on an image\r\n\r\n    // Find the matching card data based on the clicked image src\r\n    const clickedSrc = clickedImg.getAttribute(\"src\");\r\n\r\n    // Match using file name only\r\n    const clickedFileName = clickedSrc.split(\"/\").pop();\r\n    const card = cardsData.find(\r\n      (c) => c.imgSrc.split(\"/\").pop() === clickedFileName\r\n    );\r\n\r\n    if (!card) {\r\n      console.warn(\"No card found for image:\", clickedSrc);\r\n      return;\r\n    }\r\n\r\n    // Save the clicked image\r\n    clickedImage = clickedImg;\r\n\r\n    // Clear and show modal\r\n    previewableModal.innerHTML = \"\";\r\n    previewableModal.showModal();\r\n    modalOpen = true;\r\n\r\n    // Add body click listener (delayed to skip the current click)\r\n    setTimeout(() => {\r\n      previewableModal.classList.add(\"show\");\r\n      document.body.addEventListener(\"click\", bodyClickHandler);\r\n    }, 0);\r\n\r\n    // Create and insert the clicked card preview\r\n    const displayPreviewableCard = document.createElement(\"div\");\r\n    displayPreviewableCard.innerHTML = `\r\n         <div class=\"previewable-images\">\r\n          <div class=\"card-img-container\">\r\n            <img\r\n              src=\"${card.imgSrc}\"\r\n              alt=\"${card.imgAlt}\"\r\n              class=\"card-img preview-img\"\r\n            />\r\n          </div>\r\n         <p class=\"previewable-title\">${card.title}</p>\r\n      </div>\r\n         `;\r\n    previewableModal.appendChild(displayPreviewableCard);\r\n\r\n    // Close icon\r\n    const deleteIcon = document.createElement(\"img\");\r\n    deleteIcon.src = \"./assets/icons/x-close-delete-svgrepo-com.svg\";\r\n    deleteIcon.classList.add(\"delete-icon\");\r\n    deleteIcon.addEventListener(\"click\", () => {\r\n      closeModal();\r\n    });\r\n    previewableModal.appendChild(deleteIcon);\r\n  });\r\n\r\n  // Close when clicking outside modal content\r\n  function bodyClickHandler(event) {\r\n    const isInsideModal = event.target.closest(\".previewable-images\");\r\n    const isOriginalImage = clickedImage && event.target === clickedImage;\r\n\r\n    if (!isInsideModal && !isOriginalImage) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  function closeModal() {\r\n    if (!modalOpen) return;\r\n    modalOpen = false;\r\n    previewableModal.close();\r\n    //  previewableModal.classList.remove(\"show\"); // reset animation state\r\n    document.body.removeEventListener(\"click\", bodyClickHandler);\r\n    clickedImage = null;\r\n  }\r\n}\r\n","import { cardsData } from \"./cards.js\";\r\n\r\nconst modal = document.getElementById(\"postModal\");\r\nconst postForm = document.getElementById(\"newPostForm\");\r\nconst postImage = document.getElementById(\"postImage\");\r\nconst titleInput = document.getElementById(\"post-title\");\r\nconst titleError = document.getElementById(\"post-title-error\");\r\nconst imgError = document.getElementById(\"post-img-error\");\r\nconst customUpload = document.getElementById(\"customUpload\");\r\nconst uploadPreview = document.getElementById(\"uploadPreview\");\r\nconst uploadText = document.getElementById(\"uploadText\");\r\n\r\n// Handle upload box click\r\ncustomUpload.addEventListener(\"click\", () => {\r\n  postImage.click();\r\n});\r\n\r\n// Handle image preview on file select\r\npostImage.addEventListener(\"change\", () => {\r\n  const file = postImage.files[0];\r\n  if (file) {\r\n    const reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      uploadPreview.src = e.target.result;\r\n      uploadPreview.classList.remove(\"hidden\");\r\n      uploadText.classList.add(\"hidden\");\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n});\r\n\r\nexport function createNewPost() {\r\n  postForm.addEventListener(\"submit\", function (e) {\r\n    e.preventDefault();\r\n\r\n    const title = titleInput.value.trim();\r\n\r\n    if (!title) {\r\n      titleError.classList.remove(\"hidden\");\r\n      return;\r\n    }\r\n\r\n    if (!postImage.files || !postImage.files[0]) {\r\n      imgError.classList.remove(\"hidden\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      const imageDataUrl = e.target.result;\r\n\r\n      // Add the new post to cardsData\r\n      cardsData.unshift({\r\n        imgSrc: imageDataUrl,\r\n        imgAlt: title,\r\n        title: title,\r\n      });\r\n\r\n      // Create new card element in DOM as before\r\n      const newCard = document.createElement(\"div\");\r\n      newCard.className = \"card\";\r\n      newCard.innerHTML = `\r\n        <div class=\"card-img-container\">\r\n          <img class=\"card-img\" src=\"${imageDataUrl}\" alt=\"${title}\" />\r\n        </div>\r\n        <div class=\"card-description\">\r\n          <p class=\"card-title\">${title}</p>\r\n           <div class=\"like\">\r\n            <svg\r\n              class=\"like-icon\"\r\n              role=\"button\"\r\n              tabindex=\"0\"\r\n              width=\"23\"\r\n              height=\"20\"\r\n              viewBox=\"0 0 23 20\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              aria-label=\"Like button\"\r\n            >\r\n              <path\r\n                d=\"M15.9512 1.05664C17.3161 0.856584 18.8067 1.15981 20.1602 2.32812L20.4287 2.57324C22.6597 4.72264 22.3285 8.02556 20.5967 9.89355L20.4248 10.0693L11.5 18.6025L2.57422 10.0693H2.5752C0.754421 8.29659 0.296669 5.00618 2.36328 2.78516L2.57129 2.57324C3.99417 1.20243 5.593 0.843258 7.04883 1.05664C8.5402 1.27524 9.89546 2.09997 10.7266 3.11523L11.5 4.06055L12.2734 3.11523C13.1045 2.09997 14.4598 1.27524 15.9512 1.05664Z\"\r\n                stroke=\"#212121\"\r\n                stroke-width=\"2\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      `;\r\n\r\n      document.querySelector(\".container\").prepend(newCard);\r\n      const newImg = newCard.querySelector(\".card-img\");\r\n      // No need to call setupPreview() here because\r\n      // the click event listener is delegated by previewableCards()\r\n\r\n      modal.close();\r\n      postForm.reset();\r\n\r\n      // Reset preview box\r\n      uploadPreview.classList.add(\"hidden\");\r\n      uploadPreview.src = \"\";\r\n      uploadText.classList.remove(\"hidden\");\r\n    };\r\n    reader.readAsDataURL(postImage.files[0]);\r\n  });\r\n}\r\n"],"names":["$8bf73722392db36b$exports","$afe477fc70728137$var$Card1","URL","resolve","href","$34d711f61127dddc$exports","$afe477fc70728137$var$Card2","$9338d5298678106a$exports","$afe477fc70728137$var$Card3","$0873a534e8e0782d$exports","$afe477fc70728137$var$Card4","$7e33e164117ffdb7$exports","$afe477fc70728137$var$Card5","$6351ad38529be8d9$exports","$afe477fc70728137$export$b71ca3cbd6194e6d","imgSrc","imgAlt","title","$9ef1445a26defebe$var$style","document","createElement","textContent","head","appendChild","$5f11f066d705c207$var$modalEl","querySelector","$5f11f066d705c207$var$editForm","$5f11f066d705c207$var$originalName","$5f11f066d705c207$var$originalDescription","$5f11f066d705c207$var$profileImage","getElementById","$5f11f066d705c207$var$newName","$5f11f066d705c207$var$newDescription","$5f11f066d705c207$var$fileInput","$5f11f066d705c207$var$nameError","$5f11f066d705c207$var$descriptionError","$981be92df5bd93a8$var$modal","$981be92df5bd93a8$var$postForm","$981be92df5bd93a8$var$postImage","$981be92df5bd93a8$var$titleInput","$981be92df5bd93a8$var$titleError","$981be92df5bd93a8$var$imgError","$981be92df5bd93a8$var$customUpload","$981be92df5bd93a8$var$uploadPreview","$981be92df5bd93a8$var$uploadText","addEventListener","click","file","files","reader","FileReader","onload","e","src","target","result","classList","remove","add","readAsDataURL","$63eb283d27decb4d$var$modalEl","$63eb283d27decb4d$var$editBtnEl","$63eb283d27decb4d$var$cancelBtn","$63eb283d27decb4d$var$modalPost","$63eb283d27decb4d$var$newPostBtn","$63eb283d27decb4d$var$closePostModal","container","innerHTML","forEach","card","cardHTML","insertAdjacentHTML","console","log","likeIcon","closest","toggle","preventDefault","hasError","value","trim","length","close","reset","containerSelector","previewableModal","modalOpen","clickedImage","bodyClickHandler","event","isInsideModal","isOriginalImage","closeModal","body","removeEventListener","clickedImg","clickedSrc","getAttribute","clickedFileName","split","pop","find","c","warn","showModal","setTimeout","displayPreviewableCard","deleteIcon","imageDataUrl","unshift","newCard","className","prepend","firstImgCard","hoveredCard","querySelectorAll","window"],"version":3,"file":"altschool-circle1-insta-spot-assignment-02.f5196084.js.map"}